package uvm_package_example;
    import uvm_pkg::*;
    
    // Declare classes here
    // Declaring Environment
    class env_name extends uvm_env;
        // Uising component utilis macro to define environment
        `uvm_component_utils(env_name)
        function new(string name, uvm_component parent);
            super.new(name,parent);         // Calling factory base
        endfunction
     endclass: env_name
     
     // Declaring Test Driver
     class test_name extends uvm_test;
        // Uising component utilis macro to define environment
        `uvm_component_utils(test_name)
        // Instantiating environment as this_env
        env_name this_env;
    
        function new(string name, uvm_component parent);
           super.new(name, parent);         // // Calling factory base
        endfunction
    
        // Declaring phase, type build
        function void build_phase(uvm_phase phase_name);
            this_env = this_env::type_id::create("this_env", this);
        endfunction
    
        // Declaring Phase, type run
        task run_phase(uvm_phase phase_name);
            phase.raise_objection(this);
            #10;
            `uvm_info("", "Hello World", UVM_MEDIUM)
            phase.drop_objection(this);
        endtask
     
     endclass: test_name
endpackage: my_pkg
